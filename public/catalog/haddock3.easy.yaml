title: Haddock 3 on easy level
categories:
- name: topology
  description: HADDOCK3 modules to create topologies.
- name: sampling
  description: HADDOCK3 modules for sampling.
- name: refinement
  description: HADDOCK3 actions referring to refinement.
- name: scoring
  description: HADDOCK3 modules to score modules.
- name: analysis
  description: HADDOCK3 modules related to model analysis.
global:
  schema:
    type: object
    properties:
      run_dir:
        title: Run directory
        description: Folder to store the HADDOCK3 run
        $comment: The new folder that will be created to save the HADDOCK3 run
        type: string
        format: uri-reference
      molecules:
        title: Input Molecules
        description: The input molecules that will be used for docking.
        $comment: Molecules must be provided in PDB format. These PDB files can be
          single molecules or ensembles using the MODEL/ENDMDL statements.
        type: array
        minItems: 1
        maxItems: 20
        items:
          type: string
          format: uri-reference
      cns_exec:
        title: Path to the CNS executable
        description: If not provided, HADDOCK3 will use the cns path configured during
          the installation.
        $comment: CNS is a required component to run HADDOCK. Ideally it should have
          been configured during installation. If not you can specify with the cns_exec
          parameter its path.
        type: string
        format: uri-reference
      ncores:
        default: 8
        title: Number of CPU cores
        description: Number of CPU cores to use for the CNS calculations. It is truncated
          to max available CPUs  minus 1.
        $comment: Number of CPU cores to use for the CNS calculations. This will define
          the number of concurrent jobs being executed. Note that is truncated to
          the total number of available CPUs minus 1.
        type: number
        maximum: 500
        minimum: 1
      mode:
        default: local
        title: Mode of execution
        description: Mode of execution of the jobs, either local or using a batch
          system.
        $comment: Mode of execution of the jobs, either local or using a batch system.
          Currently slurm and torque are supported. For the HPC mode the queue command
          must be specified in the queue parameter.
        type: string
        minLength: 0
        maxLength: 20
        enum:
        - local
        - hpc
      batch_type:
        default: slurm
        title: Batch system
        description: Type of batch system running on your server
        $comment: Type of batch system running on your server. Only slurm and torque
          are supported at this time
        type: string
        minLength: 0
        maxLength: 100
        enum:
        - slurm
        - torque
      queue:
        default: ''
        title: Queue name
        description: Name of the batch queue to which jobs will be submitted
        $comment: Name of the batch queue to which jobs will be submitted. If not
          defined the batch system default will be used.
        type: string
        minLength: 0
        maxLength: 100
      queue_limit:
        default: 100
        title: Number of jobs to submit to the batch system
        description: Number of jobs to submit to the batch system
        $comment: This parameter controls the number of jobs that will be submitted
          to the batch system. In combination with the concat parameter this allow
          to limit the load on the queueing system and also make sure jobs remain
          in the queue for some time (if concat > 1) to avoid high system loads on
          the batch system.
        type: number
        maximum: 9999
        minimum: 1
      concat:
        default: 1
        title: Number of models to produce per job.
        description: Multiple models can be calculated within one job
        $comment: The defins the number of models that will be generated within on
          job script. This allows to concatenate the generation of models into one
          script. In that way jobs might run longer in the batch system and reduce
          the load on the scheduler.
        type: number
        maximum: 9999
        minimum: 1
    required:
    - run_dir
    - molecules
    additionalProperties: false
  uiSchema:
    molecules:
      items:
        ui:widget: file
        ui:options:
          accept: .pdb
    cns_exec:
      ui:widget: file
      ui:group: execution
    ncores:
      ui:group: execution
    mode:
      ui:group: execution
    batch_type:
      ui:group: execution
    queue:
      ui:group: execution
    queue_limit:
      ui:group: execution
    concat:
      ui:group: execution
nodes:
- id: clustfcc
  category: analysis
  label: HADDOCK3 FCC clustering module.
  description: HADDOCK3 module for clustering with FCC.
  schema:
    type: object
    properties:
      executable:
        type: string
        format: uri-reference
      contact_distance_cutoff:
        default: 5.0
        type: number
        maximum: 9999
        minimum: -9999
      fraction_cutoff:
        default: 0.6
        type: number
        maximum: 9999
        minimum: -9999
      threshold:
        default: 4
        type: number
        maximum: 9999
        minimum: -9999
      strictness:
        default: 0.75
        type: number
        maximum: 9999
        minimum: -9999
    required: []
    additionalProperties: false
  uiSchema:
    executable:
      ui:widget: file
- id: seletop
  category: analysis
  label: HADDOCK3 module to select a top cluster/model.
  description: HADDOCK3 module to select top cluster/model.
  schema:
    type: object
    properties:
      select:
        default: 200
        type: number
        maximum: 9999
        minimum: -9999
    required: []
    additionalProperties: false
  uiSchema: {}
- id: seletopclusts
  category: analysis
  label: HADDOCK3 module to select a top cluster/model.
  description: Haddock Module for 'seletopclusts'.
  schema:
    type: object
    properties:
      top_cluster:
        default: []
        type: array
        minItems: 0
        maxItems: 100
        items:
          type: number
      top_models:
        type: number
        maximum: 9999
        minimum: -9999
    required: []
    additionalProperties: false
  uiSchema: {}
- id: caprieval
  category: analysis
  label: Calculate CAPRI metrics.
  description: HADDOCK3 module to calculate the CAPRI metrics.
  schema:
    type: object
    properties:
      reference_fname:
        type: string
        format: uri-reference
      irmsd:
        default: true
        type: boolean
      fnat:
        default: true
        type: boolean
      lrmsd:
        default: true
        type: boolean
      ilrmsd:
        default: true
        type: boolean
      dockq:
        default: true
        type: boolean
      irmsd_cutoff:
        default: 10.0
        type: number
        maximum: 9999
        minimum: -9999
      fnat_cutoff:
        default: 5.0
        type: number
        maximum: 9999
        minimum: -9999
      lrmsd_cutoff:
        default: 10.0
        type: number
        maximum: 9999
        minimum: -9999
      receptor_chain:
        default: A
        type: string
        minLength: 0
        maxLength: 100
      ligand_chain:
        default: B
        type: string
        minLength: 0
        maxLength: 100
      rankby:
        default: score
        type: string
        minLength: 0
        maxLength: 100
      rank_ascending:
        default: true
        type: boolean
      sortby:
        default: score
        type: string
        minLength: 0
        maxLength: 100
      sort_ascending:
        default: true
        type: boolean
      alignment_method:
        default: sequence
        type: string
        minLength: 0
        maxLength: 100
      lovoalign_exec:
        default: ''
        type: string
        minLength: 0
        maxLength: 100
    required: []
    additionalProperties: false
  uiSchema:
    reference_fname:
      ui:widget: file
- id: gdock
  category: sampling
  label: HADDOCK3 gdock integration module.
  description: HADDOCK3 gdock module.
  schema:
    type: object
    properties:
      ambig_fname:
        type: string
        format: uri-reference
    required: []
    additionalProperties: false
  uiSchema:
    ambig_fname:
      ui:widget: file
- id: rigidbody
  category: sampling
  label: HADDOCK3 rigid-body docking module.
  description: HADDOCK3 module for rigid body sampling.
  schema:
    type: object
    properties:
      mol_shape_1:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_2:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_3:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_4:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_5:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_6:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_7:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_8:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_9:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_10:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_11:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_12:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_13:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_14:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_15:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_16:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_17:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_18:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_19:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_20:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      ambig_fname:
        title: Ambiguous distance restraints filename
        description: Filename of the ambiguous distance restraints file
        $comment: Filename of the ambiguous distance restraints file. By default 50%
          of those restraints will be randomly discared. This can be changed/turned
          off and is controlled by the randremoval and npart parameters. Note that
          this file can contain both ambiguous and unambiguous restraints.
        type: string
        format: uri-reference
      unambig_fname:
        title: Unambiguous restraints filename
        description: Filename of the unambiguous distance restraints file
        $comment: Filename of the unambiguous distance restraints file. All restraints
          in that file will be used. Note that this file can contain both ambiguous
          and unambiguous restraints.
        type: string
        format: uri-reference
      hbond_fname:
        title: H-bond restraints filename
        description: Filename of the hydrogen bond distance restraints file
        $comment: Filename of the hydrogen bond distance restraints file. Note that
          this file can contain any type of distance restraints.
        type: string
        format: uri-reference
      sampling:
        default: 1000
        title: Number of models to generate
        description: Number of rigidbody docking models to generate
        $comment: Number of rigidbody docking models to generate
        type: number
        maximum: 50000
        minimum: 1
      randorien:
        default: true
        type: boolean
      elecflag:
        default: true
        title: Include electrostatics energy
        description: Include electrostatics energy during the calculations.
        $comment: Include electrostatics energy during the calculations. If set to
          false electrostatics will not be considered.
        type: boolean
    required: []
    additionalProperties: false
  uiSchema:
    mol_shape_1:
      ui:group: molecule
    mol_shape_2:
      ui:group: molecule
    mol_shape_3:
      ui:group: molecule
    mol_shape_4:
      ui:group: molecule
    mol_shape_5:
      ui:group: molecule
    mol_shape_6:
      ui:group: molecule
    mol_shape_7:
      ui:group: molecule
    mol_shape_8:
      ui:group: molecule
    mol_shape_9:
      ui:group: molecule
    mol_shape_10:
      ui:group: molecule
    mol_shape_11:
      ui:group: molecule
    mol_shape_12:
      ui:group: molecule
    mol_shape_13:
      ui:group: molecule
    mol_shape_14:
      ui:group: molecule
    mol_shape_15:
      ui:group: molecule
    mol_shape_16:
      ui:group: molecule
    mol_shape_17:
      ui:group: molecule
    mol_shape_18:
      ui:group: molecule
    mol_shape_19:
      ui:group: molecule
    mol_shape_20:
      ui:group: molecule
    ambig_fname:
      ui:widget: file
      ui:group: distance restraints
    unambig_fname:
      ui:widget: file
      ui:group: distance restraints
    hbond_fname:
      ui:widget: file
      ui:group: distance restraints
    sampling:
      ui:group: sampling
    randorien:
      ui:group: sampling
    elecflag:
      ui:group: force field
- id: lightdock
  category: sampling
  label: Run Lightdock as a HADDOCK3 module.
  description: HADDOCK3 Lightdock module.
  schema:
    type: object
    properties:
      glowworms:
        default: 200
        type: number
        maximum: 9999
        minimum: -9999
      steps:
        default: 100
        type: number
        maximum: 9999
        minimum: -9999
      swarms:
        default: 400
        type: number
        maximum: 9999
        minimum: -9999
      scoring:
        default: fastdfire
        type: string
        minLength: 0
        maxLength: 100
      top:
        default: 10
        type: number
        maximum: 9999
        minimum: -9999
      receptor_chains:
        default: A
        type: string
        minLength: 0
        maxLength: 100
      receptor_active:
        default: ''
        type: string
        minLength: 0
        maxLength: 100
      receptor_passive:
        default: ''
        type: string
        minLength: 0
        maxLength: 100
      ligand_chains:
        default: B
        type: string
        minLength: 0
        maxLength: 100
      ligand_active:
        default: ''
        type: string
        minLength: 0
        maxLength: 100
      ligand_passive:
        default: ''
        type: string
        minLength: 0
        maxLength: 100
      noxt:
        default: true
        type: boolean
      noh:
        default: true
        type: boolean
      restraints:
        default: false
        type: boolean
    required: []
    additionalProperties: false
  uiSchema: {}
- id: topoaa
  category: topology
  label: Create and manage CNS all-atom topology.
  description: HADDOCK3 module to create CNS all-atom topologies.
  schema:
    type: object
    properties:
      delenph:
        default: true
        title: Keep or remove non-polar hydrogen atoms
        description: If set to true, non-polar hydrogen atoms will be discarded to
          save computing time
        $comment: Since HADDOCK uses a united atom force field, the non-polar hydrogen
          atoms can be in principle discarded. This saves computing time. However
          this should not be done if you are defining distance restraints to specific
          hydrogen atoms (e.g. when using NMR distance restraints).
        type: boolean
      limit:
        default: true
        type: boolean
      mol1:
        type: object
        properties:
          prot_segid:
            default: A
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol2:
        type: object
        properties:
          prot_segid:
            default: B
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol3:
        type: object
        properties:
          prot_segid:
            default: C
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol4:
        type: object
        properties:
          prot_segid:
            default: D
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol5:
        type: object
        properties:
          prot_segid:
            default: E
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol6:
        type: object
        properties:
          prot_segid:
            default: F
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol7:
        type: object
        properties:
          prot_segid:
            default: G
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol8:
        type: object
        properties:
          prot_segid:
            default: H
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol9:
        type: object
        properties:
          prot_segid:
            default: I
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol10:
        type: object
        properties:
          prot_segid:
            default: J
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol11:
        type: object
        properties:
          prot_segid:
            default: K
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol12:
        type: object
        properties:
          prot_segid:
            default: L
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol13:
        type: object
        properties:
          prot_segid:
            default: M
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol14:
        type: object
        properties:
          prot_segid:
            default: N
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol15:
        type: object
        properties:
          prot_segid:
            default: O
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol16:
        type: object
        properties:
          prot_segid:
            default: P
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol17:
        type: object
        properties:
          prot_segid:
            default: Q
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol18:
        type: object
        properties:
          prot_segid:
            default: R
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol19:
        type: object
        properties:
          prot_segid:
            default: S
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
      mol20:
        type: object
        properties:
          prot_segid:
            default: T
            title: Segment ID
            description: Segment ID assigned to this molecule
            $comment: Segment ID assigned to this molecule in CNS. Used to distinguish
              different molecules
            type: string
            minLength: 0
            maxLength: 4
          cyclicpept:
            default: false
            title: Cyclic peptide
            description: Defines the molecule as a cyclic peptide
            $comment: This option defines the molecule as a cyclic peptide and HADDOCK
              will generate a peptide bond between the N- and C-ter provided those
              are within 2A. This cutoff can be changed in the generate-topology.cns
              script.
            type: boolean
          nhisd:
            default: 0
            title: Number of HISD residue
            description: Defines the number of HISD residues (neutral HIS with the
              proton on the ND atom) residues when autohis=false
            $comment: Defines the number of HISD residues (neutral HIS with the proton
              on the ND atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hisd_1, hisd_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hisd_1:
            title: HISD residue number
            description: Residue number of the Histidine to be defined as HISD
            $comment: Residue number of the Histidine to be defined as HISD
            type: number
            maximum: 9999
            minimum: -9999
          nhise:
            default: 0
            title: Number of HISE residue
            description: Defines the number of HISE residues (neutral HIS with the
              proton on the NE atom) residues when autohis=false
            $comment: Defines the number of HISE residues (neutral HIS with the proton
              on the NE atom) residues. The corresponding residue numbers must be
              defined in the following parameter (hise_1, hise_2, ...). Add as many
              as needed. Note that HIS is interpreted as a charged Histidine)
            type: number
            maximum: 9999
            minimum: 0
          hise_1:
            title: HISE residue number
            description: Residue number of the Histidine to be defined as HISE
            $comment: Residue number of the Histidine to be defined as HISE
            type: number
            maximum: 9999
            minimum: -9999
        required: []
        additionalProperties: false
    required: []
    additionalProperties: false
  uiSchema:
    delenph:
      ui:group: molecule
    mol1:
      ui:field: collapsible
    mol2:
      ui:field: collapsible
    mol3:
      ui:field: collapsible
    mol4:
      ui:field: collapsible
    mol5:
      ui:field: collapsible
    mol6:
      ui:field: collapsible
    mol7:
      ui:field: collapsible
    mol8:
      ui:field: collapsible
    mol9:
      ui:field: collapsible
    mol10:
      ui:field: collapsible
    mol11:
      ui:field: collapsible
    mol12:
      ui:field: collapsible
    mol13:
      ui:field: collapsible
    mol14:
      ui:field: collapsible
    mol15:
      ui:field: collapsible
    mol16:
      ui:field: collapsible
    mol17:
      ui:field: collapsible
    mol18:
      ui:field: collapsible
    mol19:
      ui:field: collapsible
    mol20:
      ui:field: collapsible
- id: emscoring
  category: scoring
  label: HADDOCK3 scoring module.
  description: HADDOCK3 module to perform energy minimization scoring.
  schema:
    type: object
    properties:
      tolerance:
        default: 5
        type: number
        maximum: 9999
        minimum: -9999
      log_level:
        default: verbose
        type: string
        minLength: 0
        maxLength: 100
      ligand_param_fname:
        type: string
        format: uri-reference
      ligand_top_fname:
        type: string
        format: uri-reference
      individualize:
        default: true
        type: boolean
      nemsteps:
        default: 40
        type: number
        maximum: 9999
        minimum: -9999
      elecflag:
        default: true
        type: boolean
      dielec:
        default: cdie
        type: string
        minLength: 0
        maxLength: 100
      epsilon:
        default: 1.0
        type: number
        maximum: 9999
        minimum: -9999
      dihedflag:
        default: true
        type: boolean
      par_nonbonded:
        default: OPLSX
        type: string
        minLength: 0
        maxLength: 100
      w_air:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_bsa:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_cdih:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_dani:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_deint:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_desolv:
        default: 1.0
        type: number
        maximum: 9999
        minimum: -9999
      w_dist:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_elec:
        default: 0.2
        type: number
        maximum: 9999
        minimum: -9999
      w_lcc:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_rg:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_sani:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_sym:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_vdw:
        default: 1.0
        type: number
        maximum: 9999
        minimum: -9999
      w_vean:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_xpcs:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_xrdc:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      w_zres:
        default: 0.0
        type: number
        maximum: 9999
        minimum: -9999
      shape_1:
        default: false
        type: boolean
      shape_2:
        default: false
        type: boolean
      shape_3:
        default: false
        type: boolean
      shape_4:
        default: false
        type: boolean
      shape_5:
        default: false
        type: boolean
      shape_6:
        default: false
        type: boolean
      shape_7:
        default: false
        type: boolean
      shape_8:
        default: false
        type: boolean
      shape_9:
        default: false
        type: boolean
      shape_10:
        default: false
        type: boolean
      shape_11:
        default: false
        type: boolean
      shape_12:
        default: false
        type: boolean
      shape_13:
        default: false
        type: boolean
      shape_14:
        default: false
        type: boolean
      shape_15:
        default: false
        type: boolean
      shape_16:
        default: false
        type: boolean
      shape_17:
        default: false
        type: boolean
      shape_18:
        default: false
        type: boolean
      shape_19:
        default: false
        type: boolean
      shape_20:
        default: false
        type: boolean
    required: []
    additionalProperties: false
  uiSchema:
    ligand_param_fname:
      ui:widget: file
    ligand_top_fname:
      ui:widget: file
- id: flexref
  category: refinement
  label: HADDOCK3 module for flexible refinement.
  description: HADDOCK3 module for flexible refinement.
  schema:
    type: object
    properties:
      mol_shape_1:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_2:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_3:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_4:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_5:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_6:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_7:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_8:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_9:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_10:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_11:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_12:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_13:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_14:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_15:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_16:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_17:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_18:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_19:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_20:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      ambig_fname:
        title: Ambiguous distance restraints filename
        description: Filename of the ambiguous distance restraints file
        $comment: Filename of the ambiguous distance restraints file. By default 50%
          of those restraints will be randomly discared. This can be changed/turned
          off and is controlled by the randremoval and npart parameters. Note that
          this file can contain both ambiguous and unambiguous restraints.
        type: string
        format: uri-reference
      unambig_fname:
        title: Unambiguous restraints filename
        description: Filename of the unambiguous distance restraints file
        $comment: Filename of the unambiguous distance restraints file. All restraints
          in that file will be used. Note that this file can contain both ambiguous
          and unambiguous restraints.
        type: string
        format: uri-reference
      hbond_fname:
        title: H-bond restraints filename
        description: Filename of the hydrogen bond distance restraints file
        $comment: Filename of the hydrogen bond distance restraints file. Note that
          this file can contain any type of distance restraints.
        type: string
        format: uri-reference
      dihe_fname:
        title: Dihedral angle restraints filename
        description: Filename of the Dihedral angle restraints file
        $comment: Filename of the Dihedral angle restraints file.
        type: string
        format: uri-reference
      dihedrals_on:
        default: false
        title: Use dihedral angle restraints
        description: Turns on dihedral angle restraints.
        $comment: Turns on dihedral angle restraints. Those should be defined in the
          dihe_fname file.
        type: boolean
      ssdihed:
        default: none
        title: Define automatically backbone dihedral angle restraints
        description: If turned on, this option will automatically defined backbone
          dihedral angle restraints for the selected regions.
        $comment: This option allows to utomatically defined backbone dihedral angle
          restraints for the selected regions. The restraints will be defined for
          the phi and psi backbone dihedral angles of amino acids, with the target
          value taken from the measured angle in the input structure, and the error
          bound defined by the error_dih parameter. Those restraints can be applied
          to the entire structure (all), the alpha/beta secondary structure elements
          (alphabeta) or only to the alpha helical regions (alpha). Those are automatically
          detected based on the measured dihedral angle combinations.
        type: string
        minLength: 0
        maxLength: 100
        enum:
        - none
        - all
        - alpha
        - alphabeta
      error_dih:
        default: 10
        title: Force constant for backbone dihedral angle restraints
        description: Force constant for backbone dihedral angle restraints (ssdihed
          option)
        $comment: Force constant for backbone dihedral angle restraints (ssdihed option)
        type: number
        maximum: 9999
        minimum: -9999
      dnarest_on:
        default: false
        title: Restrain the DNA conformation
        description: Automatically creates restraints to maintain the conformation
          of DNA/RNA
        $comment: 'This option allows to restraint the conformation of nucleic acids
          based on the values from the input structures. The following restraints
          will be automatically defined: - single base planarity - sugar pucker -
          phosphate backbone diherdral angle restraints - Watson-Crick base pairing'
        type: boolean
      mrswi_hot:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      mrswi_cool1:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      mrswi_cool2:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      mrswi_cool3:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      rswi_hot:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      rswi_cool1:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      rswi_cool2:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      rswi_cool3:
        default: 0.5
        type: number
        maximum: 9999
        minimum: -9999
      masy_hot:
        default: -1.0
        type: number
        maximum: 9999
        minimum: -9999
      masy_cool1:
        default: -1.0
        type: number
        maximum: 9999
        minimum: -9999
      masy_cool2:
        default: -0.1
        type: number
        maximum: 9999
        minimum: -9999
      masy_cool3:
        default: -0.1
        type: number
        maximum: 9999
        minimum: -9999
      asy_hot:
        default: 1.0
        type: number
        maximum: 9999
        minimum: -9999
      asy_cool1:
        default: 1.0
        type: number
        maximum: 9999
        minimum: -9999
      asy_cool2:
        default: 0.1
        type: number
        maximum: 9999
        minimum: -9999
      asy_cool3:
        default: 0.1
        type: number
        maximum: 9999
        minimum: -9999
      elecflag:
        default: true
        title: Include electrostatics energy
        description: Include electrostatics energy during the calculations.
        $comment: Include electrostatics energy during the calculations. If set to
          false electrostatics will not be considered.
        type: boolean
      sinter_rigid_final:
        default: 0.001
        title: End rigid-body MD intermolecular interactions scaling factor.
        description: End scaling factor for intermolecular interactions in the first
          cooling stage.
        $comment: End scaling factor applied to intermolecular interactions during
          the first cooling stage of the simulated annealing protocol.
        type: number
        maximum: 1
        minimum: 1.0e-05
    required: []
    additionalProperties: false
  uiSchema:
    mol_shape_1:
      ui:group: molecule
    mol_shape_2:
      ui:group: molecule
    mol_shape_3:
      ui:group: molecule
    mol_shape_4:
      ui:group: molecule
    mol_shape_5:
      ui:group: molecule
    mol_shape_6:
      ui:group: molecule
    mol_shape_7:
      ui:group: molecule
    mol_shape_8:
      ui:group: molecule
    mol_shape_9:
      ui:group: molecule
    mol_shape_10:
      ui:group: molecule
    mol_shape_11:
      ui:group: molecule
    mol_shape_12:
      ui:group: molecule
    mol_shape_13:
      ui:group: molecule
    mol_shape_14:
      ui:group: molecule
    mol_shape_15:
      ui:group: molecule
    mol_shape_16:
      ui:group: molecule
    mol_shape_17:
      ui:group: molecule
    mol_shape_18:
      ui:group: molecule
    mol_shape_19:
      ui:group: molecule
    mol_shape_20:
      ui:group: molecule
    ambig_fname:
      ui:widget: file
      ui:group: distance restraints
    unambig_fname:
      ui:widget: file
      ui:group: distance restraints
    hbond_fname:
      ui:widget: file
      ui:group: distance restraints
    dihe_fname:
      ui:widget: file
      ui:group: dihedral restraints
    dihedrals_on:
      ui:group: dihedral restraints
    ssdihed:
      ui:group: dihedral restraints
    error_dih:
      ui:group: dihedral restraints
    dnarest_on:
      ui:group: other restraints
    elecflag:
      ui:group: force field
- id: mdref
  category: refinement
  label: HADDOCK3 module for water refinement.
  description: HADDOCK3 module for water refinement.
  schema:
    type: object
    properties:
      mol_shape_1:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_2:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_3:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_4:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_5:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_6:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_7:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_8:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_9:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_10:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_11:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_12:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_13:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_14:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_15:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_16:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_17:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_18:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_19:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_20:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      ambig_fname:
        title: Ambiguous distance restraints filename
        description: Filename of the ambiguous distance restraints file
        $comment: Filename of the ambiguous distance restraints file. By default 50%
          of those restraints will be randomly discared. This can be changed/turned
          off and is controlled by the randremoval and npart parameters. Note that
          this file can contain both ambiguous and unambiguous restraints.
        type: string
        format: uri-reference
      unambig_fname:
        title: Unambiguous restraints filename
        description: Filename of the unambiguous distance restraints file
        $comment: Filename of the unambiguous distance restraints file. All restraints
          in that file will be used. Note that this file can contain both ambiguous
          and unambiguous restraints.
        type: string
        format: uri-reference
      hbond_fname:
        title: H-bond restraints filename
        description: Filename of the hydrogen bond distance restraints file
        $comment: Filename of the hydrogen bond distance restraints file. Note that
          this file can contain any type of distance restraints.
        type: string
        format: uri-reference
      dihe_fname:
        title: Dihedral angle restraints filename
        description: Filename of the Dihedral angle restraints file
        $comment: Filename of the Dihedral angle restraints file.
        type: string
        format: uri-reference
      dihedrals_on:
        default: false
        title: Use dihedral angle restraints
        description: Turns on dihedral angle restraints.
        $comment: Turns on dihedral angle restraints. Those should be defined in the
          dihe_fname file.
        type: boolean
      ssdihed:
        default: none
        title: Define automatically backbone dihedral angle restraints
        description: If turned on, this option will automatically defined backbone
          dihedral angle restraints for the selected regions.
        $comment: This option allows to utomatically defined backbone dihedral angle
          restraints for the selected regions. The restraints will be defined for
          the phi and psi backbone dihedral angles of amino acids, with the target
          value taken from the measured angle in the input structure, and the error
          bound defined by the error_dih parameter. Those restraints can be applied
          to the entire structure (all), the alpha/beta secondary structure elements
          (alphabeta) or only to the alpha helical regions (alpha). Those are automatically
          detected based on the measured dihedral angle combinations.
        type: string
        minLength: 0
        maxLength: 100
        enum:
        - none
        - all
        - alpha
        - alphabeta
      error_dih:
        default: 10
        title: Force constant for backbone dihedral angle restraints
        description: Force constant for backbone dihedral angle restraints (ssdihed
          option)
        $comment: Force constant for backbone dihedral angle restraints (ssdihed option)
        type: number
        maximum: 1000
        minimum: 0
      dnarest_on:
        default: false
        title: Restrain the DNA conformation
        description: Automatically creates restraints to maintain the conformation
          of DNA/RNA
        $comment: 'This option allows to restraint the conformation of nucleic acids
          based on the values from the input structures. The following restraints
          will be automatically defined: - single base planarity - sugar pucker -
          phosphate backbone diherdral angle restraints - Watson-Crick base pairing'
        type: boolean
      elecflag:
        default: true
        title: Include electrostatics energy
        description: Include electrostatics energy during the calculations.
        $comment: Include electrostatics energy during the calculations. If set to
          false electrostatics will not be considered.
        type: boolean
      solvent:
        default: water
        title: Solvent
        description: Solvent to use during the short MD refinement
        $comment: Solvent to use during the short MD refinement. Water and DMSO are
          supported. A solvent shelll is generated by shifting pre-equilibrated boxes
          around the complex. For water an 8A water shell is generated and for DMSO
          a 12.5A shell. For DMSO,
        type: string
        minLength: 0
        maxLength: 100
        enum:
        - water
        - dmso
    required: []
    additionalProperties: false
  uiSchema:
    mol_shape_1:
      ui:group: molecule
    mol_shape_2:
      ui:group: molecule
    mol_shape_3:
      ui:group: molecule
    mol_shape_4:
      ui:group: molecule
    mol_shape_5:
      ui:group: molecule
    mol_shape_6:
      ui:group: molecule
    mol_shape_7:
      ui:group: molecule
    mol_shape_8:
      ui:group: molecule
    mol_shape_9:
      ui:group: molecule
    mol_shape_10:
      ui:group: molecule
    mol_shape_11:
      ui:group: molecule
    mol_shape_12:
      ui:group: molecule
    mol_shape_13:
      ui:group: molecule
    mol_shape_14:
      ui:group: molecule
    mol_shape_15:
      ui:group: molecule
    mol_shape_16:
      ui:group: molecule
    mol_shape_17:
      ui:group: molecule
    mol_shape_18:
      ui:group: molecule
    mol_shape_19:
      ui:group: molecule
    mol_shape_20:
      ui:group: molecule
    ambig_fname:
      ui:widget: file
      ui:group: distance restraints
    unambig_fname:
      ui:widget: file
      ui:group: distance restraints
    hbond_fname:
      ui:widget: file
      ui:group: distance restraints
    dihe_fname:
      ui:widget: file
      ui:group: dihedral restraints
    dihedrals_on:
      ui:group: dihedral restraints
    ssdihed:
      ui:group: dihedral restraints
    error_dih:
      ui:group: dihedral restraints
    dnarest_on:
      ui:group: other restraints
    elecflag:
      ui:group: force field
- id: emref
  category: refinement
  label: HADDOCK3 module for energy minimization refinement.
  description: HADDOCK3 module energy minimization refinement.
  schema:
    type: object
    properties:
      mol_shape_1:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_2:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_3:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_4:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_5:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_6:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_7:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_8:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_9:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_10:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_11:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_12:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_13:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_14:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_15:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_16:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_17:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_18:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_19:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      mol_shape_20:
        default: false
        title: Is the molecule a shape?
        description: Defines a molecule as a shape.
        $comment: Defines a molecule as a shape, which is a collection of beads.
        type: boolean
      ambig_fname:
        title: Ambiguous distance restraints filename
        description: Filename of the ambiguous distance restraints file
        $comment: Filename of the ambiguous distance restraints file. By default 50%
          of those restraints will be randomly discared. This can be changed/turned
          off and is controlled by the randremoval and npart parameters. Note that
          this file can contain both ambiguous and unambiguous restraints.
        type: string
        format: uri-reference
      unambig_fname:
        title: Unambiguous restraints filename
        description: Filename of the unambiguous distance restraints file
        $comment: Filename of the unambiguous distance restraints file. All restraints
          in that file will be used. Note that this file can contain both ambiguous
          and unambiguous restraints.
        type: string
        format: uri-reference
      hbond_fname:
        title: H-bond restraints filename
        description: Filename of the hydrogen bond distance restraints file
        $comment: Filename of the hydrogen bond distance restraints file. Note that
          this file can contain any type of distance restraints.
        type: string
        format: uri-reference
      dihe_fname:
        title: Dihedral angle restraints filename
        description: Filename of the Dihedral angle restraints file
        $comment: Filename of the Dihedral angle restraints file.
        type: string
        format: uri-reference
      dihedrals_on:
        default: false
        title: Use dihedral angle restraints
        description: Turns on dihedral angle restraints.
        $comment: Turns on dihedral angle restraints. Those should be defined in the
          dihe_fname file.
        type: boolean
      dihedrals_scale:
        default: 200
        title: Force constant for dihedral angle restraints
        description: Force constant applied to the dihedral angle restraints read
          from dihe_fname.
        $comment: Force constant applied to the dihedral angle restraints read from
          dihe_fname.
        type: number
        maximum: 9999
        minimum: -9999
      ssdihed:
        default: none
        title: Define automatically backbone dihedral angle restraints
        description: If turned on, this option will automatically defined backbone
          dihedral angle restraints for the selected regions.
        $comment: This option allows to utomatically defined backbone dihedral angle
          restraints for the selected regions. The restraints will be defined for
          the phi and psi backbone dihedral angles of amino acids, with the target
          value taken from the measured angle in the input structure, and the error
          bound defined by the error_dih parameter. Those restraints can be applied
          to the entire structure (all), the alpha/beta secondary structure elements
          (alphabeta) or only to the alpha helical regions (alpha). Those are automatically
          detected based on the measured dihedral angle combinations.
        type: string
        minLength: 0
        maxLength: 100
        enum:
        - none
        - all
        - alpha
        - alphabeta
      error_dih:
        default: 10
        title: Force constant for backbone dihedral angle restraints
        description: Force constant for backbone dihedral angle restraints (ssdihed
          option)
        $comment: Force constant for backbone dihedral angle restraints (ssdihed option)
        type: number
        maximum: 9999
        minimum: -9999
      dnarest_on:
        default: false
        title: Restrain the DNA conformation
        description: Automatically creates restraints to maintain the conformation
          of DNA/RNA
        $comment: 'This option allows to restraint the conformation of nucleic acids
          based on the values from the input structures. The following restraints
          will be automatically defined: - single base planarity - sugar pucker -
          phosphate backbone diherdral angle restraints - Watson-Crick base pairing'
        type: boolean
      elecflag:
        default: true
        title: Include electrostatics energy
        description: Include electrostatics energy during the calculations.
        $comment: Include electrostatics energy during the calculations. If set to
          false electrostatics will not be considered.
        type: boolean
      dihedflag:
        default: true
        type: boolean
      sampling:
        default: 200
        title: Number of models to generate
        description: Number of EM refined models to generate
        $comment: Number of EM refined models to generate
        type: number
        maximum: 50000
        minimum: 1
    required: []
    additionalProperties: false
  uiSchema:
    mol_shape_1:
      ui:group: molecule
    mol_shape_2:
      ui:group: molecule
    mol_shape_3:
      ui:group: molecule
    mol_shape_4:
      ui:group: molecule
    mol_shape_5:
      ui:group: molecule
    mol_shape_6:
      ui:group: molecule
    mol_shape_7:
      ui:group: molecule
    mol_shape_8:
      ui:group: molecule
    mol_shape_9:
      ui:group: molecule
    mol_shape_10:
      ui:group: molecule
    mol_shape_11:
      ui:group: molecule
    mol_shape_12:
      ui:group: molecule
    mol_shape_13:
      ui:group: molecule
    mol_shape_14:
      ui:group: molecule
    mol_shape_15:
      ui:group: molecule
    mol_shape_16:
      ui:group: molecule
    mol_shape_17:
      ui:group: molecule
    mol_shape_18:
      ui:group: molecule
    mol_shape_19:
      ui:group: molecule
    mol_shape_20:
      ui:group: molecule
    ambig_fname:
      ui:widget: file
      ui:group: distance restraints
    unambig_fname:
      ui:widget: file
      ui:group: distance restraints
    hbond_fname:
      ui:widget: file
      ui:group: distance restraints
    dihe_fname:
      ui:widget: file
      ui:group: dihedral restraints
    dihedrals_on:
      ui:group: dihedral restraints
    dihedrals_scale:
      ui:group: dihedral restraints
    ssdihed:
      ui:group: dihedral restraints
    error_dih:
      ui:group: dihedral restraints
    dnarest_on:
      ui:group: other restraints
    elecflag:
      ui:group: force field
    sampling:
      ui:group: sampling
examples:
  docking-protein-ligand: /examples/docking-protein-ligand.zip
